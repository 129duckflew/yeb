<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.duckflew.mapper.EmployeeMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="cn.duckflew.pojo.Employee">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="gender" property="gender" />
        <result column="birthday" property="birthday" />
        <result column="idCard" property="idCard" />
        <result column="wedlock" property="wedlock" />
        <result column="nationId" property="nationId" />
        <result column="nativePlace" property="nativePlace" />
        <result column="politicId" property="politicId" />
        <result column="email" property="email" />
        <result column="phone" property="phone" />
        <result column="address" property="address" />
        <result column="departmentId" property="departmentId" />
        <result column="jobLevelId" property="jobLevelId" />
        <result column="posId" property="posId" />
        <result column="engageForm" property="engageForm" />
        <result column="tiptopDegree" property="tiptopDegree" />
        <result column="specialty" property="specialty" />
        <result column="school" property="school" />
        <result column="beginDate" property="beginDate" />
        <result column="workState" property="workState" />
        <result column="workID" property="workID" />
        <result column="contractTerm" property="contractTerm" />
        <result column="conversionTime" property="conversionTime" />
        <result column="notWorkDate" property="notWorkDate" />
        <result column="beginContract" property="beginContract" />
        <result column="endContract" property="endContract" />
        <result column="workAge" property="workAge" />
        <result column="salaryId" property="salaryId" />
    </resultMap>

    <!-- 通用查询结果列 -->
<select id="getEmpByPage" resultMap="EmployeeInfo">
SELECT
	e.*,
	t_nation.id AS nid,
	t_nation.`name` AS nname,
	t_politics_status.id AS psid,
	t_politics_status.`name` AS psname,
	t_department.id AS did,
	t_department.`name` AS dname,
	t_joblevel.id AS jlid,
	t_joblevel.`name` jlname,
	t_position.id posId,
	t_position.`name` posname
FROM
	t_employee e,
	t_nation,
	t_politics_status,
	t_department,
	t_joblevel,
	t_position
WHERE
	e.nationId = t_nation.id
	AND e.politicId = t_politics_status.id
	AND e.departmentId = t_department.id
	AND e.jobLevelId = t_joblevel.id
	AND e.posId = t_position.id
	<if test="employee.name != null">
        AND e.`name` LIKE CONCAT( '%', #{employee.name}, '%' )
    </if>
    <if test="employee.politicId != null">
        AND e.politicId =#{employee.politicId}
    </if>
     <if test="employee.nationId != null">
        AND e.nationId =#{employee.nationId}
    </if>
     <if test="employee.jobLevelId!= null">
         AND e.jobLevelId =#{employee.jobLevelId}
    </if>
	 <if test="employee.posId!= null">
         AND e.posId =#{employee.posId}
    </if>
	 <if test="employee.engageForm!= null  and employee.engageForm != ''">
         AND e.engageForm =#{employee.engageForm}
    </if>
     <if test="employee.departmentId!= null">
         AND e.departmentId = #{employee.departmentId}
    </if>
    <if test="beginDateScope != null  and beginDateScope.length==2">
    AND e.beginDate BETWEEN #{beginDateScope[0]} AND #{beginDateScope[1]}
    </if>
ORDER BY
    e.id
</select>


<!--    获取所有员工-->
    <sql id="Base_Column_List">
        id, name, gender, birthday, idCard, wedlock, nationId, nativePlace, politicId, email, phone, address, departmentId, jobLevelId, posId, engageForm, tiptopDegree, specialty, school, beginDate, workState, workID, contractTerm, conversionTime, notWorkDate, beginContract, endContract, workAge, salaryId
    </sql>
<resultMap id="EmployeeInfo" type="cn.duckflew.pojo.Employee" extends="BaseResultMap">
    <association property="nation" javaType="cn.duckflew.pojo.Nation">
        <id column="nid" property="id"/>
        <result column="nname" property="name"/>
    </association>
    <association property="politicsStatus" javaType="cn.duckflew.pojo.PoliticsStatus">
         <id column="psid" property="id"/>
        <result column="psname" property="name"/>
    </association>
     <association property="department" javaType="cn.duckflew.pojo.Department">
         <id column="did" property="id"/>
        <result column="dname" property="name"/>
    </association>
      <association property="position" javaType="cn.duckflew.pojo.Position">
         <id column="posId" property="id"/>
        <result column="posname" property="name"/>
    </association>
      <association property="jobLevel" javaType="cn.duckflew.pojo.Joblevel">
         <id column="jlid" property="id"/>
        <result column="jlname" property="name"/>
    </association>
</resultMap>


<resultMap id="EmpWithSalary" type="cn.duckflew.pojo.Employee" extends="BaseResultMap">
    <association property="salary" javaType="cn.duckflew.pojo.Salary">
        <id property="id" column="sid"></id>
        <result column="sname" property="name"></result>
        <result column="basicSalary" property="basicSalary"></result>
        <result column="sbonus" property="bonus"></result>
        <result column="slunch" property="lunchSalary"></result>
        <result column="strafficSalary" property="trafficSalary"></result>
        <result column="sallsary" property="allSalary"></result>
        <result column="smedicalPer" property="medicalPer"></result>
        <result column="smedicalBase" property="medicalBase"></result>
        <result column="saccumulationFundPer" property="accumulationFundPer"></result>
        <result column="accumulationFundBase" property="accumulationFundBase"></result>
    </association>
    <association property="department" javaType="cn.duckflew.pojo.Department">
        <result column="dname" property="name"/>
    </association>
</resultMap>
<select id="getEmpWithSalary" resultMap="EmpWithSalary">

SELECT
  e.*,
	d.`name` AS dname,
	s.id AS sid,
	s.basicSalary AS basicSalary,
	s.`name` AS sname,
	s.bonus AS sbonus,
	s.trafficSalary AS strafficSalary,
	s.pensionBase AS spensionBase,
	s.medicalBase AS smedicalBase,
	s.medicalPer AS smedicalPer,
	s.allSalary AS sallsary,
  s.accumulationFundPer AS saccumulationFundPer,
  s.accumulationFundBase AS accumulationFundBase ,
	s.lunchSalary AS slunch
FROM
	t_employee  e
	LEFT JOIN t_salary s ON e.salaryId = s.id
	LEFT JOIN t_department d ON e.departmentId = d.id
ORDER BY
	e.id
</select>

</mapper>
